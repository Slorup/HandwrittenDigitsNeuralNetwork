val trainingData = IntArray(4).map { Pair(SimpleMatrix(2,1), SimpleMatrix(2, 1)) }

    trainingData[0].first[0] = 0.0
    trainingData[0].first[1] = 0.0
    trainingData[0].second[0] = 0.0
    trainingData[0].second[1] = 0.0

    trainingData[1].first[0] = 1.0
    trainingData[1].first[1] = 0.0
    trainingData[1].second[0] = 0.0
    trainingData[1].second[1] = 1.0

    trainingData[2].first[0] = 0.0
    trainingData[2].first[1] = 1.0
    trainingData[2].second[0] = 0.0
    trainingData[2].second[1] = 1.0

    trainingData[3].first[0] = 1.0
    trainingData[3].first[1] = 1.0
    trainingData[3].second[0] = 1.0
    trainingData[3].second[1] = 0.0

    // 1.5901E-6 lr 10 rlr 1 i E6

        val nn = NeuralNetwork(listOf(2,2,2), 10.0)
        for (i in 1..1000000) {
            nn.learningRate *= 1.0000002
            nn.train(trainingData)

            println("$i\t ${nn.learningRate} \t ${trainingData.sumByDouble { nn.evaluate(it.first).minus(it.second).allElements().map { it * it }.sum() }}")

        }